import streamlit as st
import base64

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="MUPAI - Entrenamiento Digital",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# ---- CSS Personalizado ----
def local_css(file_name):
    with open(file_name) as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# Intenta cargar el CSS si existe
try:
    local_css("styles.css")
except:
    st.warning("No se encontr√≥ el archivo CSS personalizado")

# ---- Logo y Encabezado ----
def get_base64(bin_file):
    with open(bin_file, 'rb') as f:
        data = f.read()
    return base64.b64encode(data).decode()

# ---- Definici√≥n de funciones mejoradas ----
def cuestionario_calidad_sueno():
    with st.container():
        st.title("üåô Evaluaci√≥n de la Calidad del Sue√±o")
        st.subheader("√çndice de Pittsburgh - PSQI")
        st.write("Responde las siguientes preguntas sobre tus h√°bitos de sue√±o durante el √∫ltimo mes:")
        
        with st.expander("üìÖ Horarios de sue√±o", expanded=True):
            col1, col2 = st.columns(2)
            with col1:
                hora_acostarse = st.text_input("Hora de acostarse (ej: 22:30)", key="hora_acostar")
            with col2:
                hora_levantarse = st.text_input("Hora de levantarse (ej: 07:00)", key="hora_levantar")
            
            col3, col4 = st.columns(2)
            with col3:
                tiempo_dormirse = st.slider("Tiempo para dormirse (minutos)", 0, 120, 15, key="tiempo_dormir")
            with col4:
                horas_dormidas = st.slider("Horas de sue√±o por noche", 0.0, 12.0, 7.0, step=0.5, key="horas_dormir")

        with st.expander("‚ö†Ô∏è Problemas para dormir", expanded=True):
            problemas = [
                "No poder conciliar el sue√±o en 30 minutos",
                "Despertarte durante la noche o muy temprano",
                "Ir al ba√±o durante la noche",
                "No poder respirar bien",
                "Toser o roncar fuerte",
                "Sentir fr√≠o",
                "Sentir calor",
                "Tener pesadillas",
                "Sentir dolor"
            ]
            
            opciones = ["Ninguna vez", "Menos de una vez a la semana", "Una o dos veces a la semana", "Tres o m√°s veces a la semana"]
            
            problemas_respuestas = {}
            for i, problema in enumerate(problemas):
                problemas_respuestas[problema] = st.radio(
                    f"{i+1}. {problema}:",
                    opciones,
                    horizontal=True,
                    key=f"problema_{i}"
                )

        with st.expander("üíä Uso de medicaci√≥n"):
            uso_medicacion = st.radio(
                "Frecuencia de uso de medicamentos para dormir:",
                opciones,
                horizontal=True,
                key="medicacion"
            )

        with st.expander("üò¥ Disfunci√≥n diurna"):
            disfuncion_diurna_1 = st.radio(
                "Problemas para mantenerse despierto durante actividades:",
                opciones,
                horizontal=True,
                key="disfuncion1"
            )
            disfuncion_diurna_2 = st.radio(
                "Dificultad para mantener el entusiasmo:",
                opciones,
                horizontal=True,
                key="disfuncion2"
            )

        with st.expander("‚≠ê Calidad subjetiva"):
            calidad_sueno = st.radio(
                "Calificaci√≥n de la calidad de tu sue√±o:",
                ["Muy buena", "Bastante buena", "Bastante mala", "Muy mala"],
                horizontal=True,
                key="calidad"
            )

        if st.button("üìä Calcular Puntuaci√≥n", use_container_width=True, type="primary"):
            puntuacion = {"Ninguna vez": 0, "Menos de una vez a la semana": 1, "Una o dos veces a la semana": 2, "Tres o m√°s veces a la semana": 3}
            calidad_puntuacion = {"Muy buena": 0, "Bastante buena": 1, "Bastante mala": 2, "Muy mala": 3}

            componente_1 = calidad_puntuacion[calidad_sueno]
            componente_2 = 1 if tiempo_dormirse > 30 else 0
            componente_3 = 0 if horas_dormidas >= 7 else (1 if horas_dormidas >= 6 else 2)
            componente_4 = sum(puntuacion[v] for v in problemas_respuestas.values())
            componente_5 = puntuacion[uso_medicacion]
            componente_6 = puntuacion[disfuncion_diurna_1] + puntuacion[disfuncion_diurna_2]

            total_puntuacion = componente_1 + componente_2 + componente_3 + componente_4 + componente_5 + componente_6

            st.divider()
            st.subheader("Resultados de la Evaluaci√≥n")
            st.metric(label="Puntuaci√≥n Total PSQI", value=total_puntuacion)
            
            if total_puntuacion <= 5:
                st.success("‚úÖ Buena calidad de sue√±o")
                st.progress(0.2)
                st.write("Tu calidad de sue√±o es buena. Contin√∫a con tus h√°bitos saludables.")
            elif 6 <= total_puntuacion <= 10:
                st.warning("‚ö†Ô∏è Calidad de sue√±o moderada")
                st.progress(0.5)
                st.write("Tu sue√±o podr√≠a mejorar. Considera establecer rutinas m√°s consistentes y crear un ambiente propicio para dormir.")
            else:
                st.error("‚ùå Mala calidad de sue√±o")
                st.progress(0.8)
                st.write("Tu calidad de sue√±o necesita atenci√≥n. Te recomendamos consultar con un especialista y revisar tus h√°bitos de sue√±o.")

# Otras funciones (ipaq, habitos_alimenticios, etc) ir√≠an aqu√≠...

# ---- Barra lateral mejorada ----
with st.sidebar:
    st.title("MUPAI")
    st.subheader("Entrenamiento Digital")
    st.divider()
    
    menu = st.selectbox(
        "Men√∫ Principal",
        ["üè† Inicio", "üë§ Sobre M√≠", "üíº Servicios", "üìû Contacto", "üìä Evaluaci√≥n del Estilo de Vida"],
        index=0
    )
    
    st.divider()
    st.caption("MUPAI - Entrenamiento Digital Basado en Ciencia")
    st.caption("¬© 2023 Todos los derechos reservados")

# ---- Contenido principal ----
if menu == "üè† Inicio":
    st.title("Bienvenido a MUPAI")
    st.subheader("Entrenamiento Digital Basado en Ciencia")
    
    st.divider()
    
    tab1, tab2, tab3 = st.tabs(["Misi√≥n", "Visi√≥n", "Pol√≠tica"])
    
    with tab1:
        st.header("üöÄ Misi√≥n")
        st.write("""
        Hacer accesible el entrenamiento basado en ciencia, proporcionando planes completamente personalizados a trav√©s de herramientas digitales respaldadas por inteligencia artificial, datos precisos y la investigaci√≥n m√°s actualizada en ciencias del ejercicio.
        """)
    
    with tab2:
        st.header("üî≠ Visi√≥n")
        st.write("""
        Convertirnos en uno de los m√°ximos referentes a nivel global en entrenamiento digital personalizado, aprovechando las nuevas tecnolog√≠as para hacer m√°s accesible el fitness basado en ciencia.
        """)
    
    with tab3:
        st.header("üìú Pol√≠tica")
        st.write("""
        En **MUPAI**, nuestra pol√≠tica est√° fundamentada en el compromiso con la excelencia, la √©tica y el servicio centrado en el usuario.
        """)
    
    st.divider()
    
    st.header("Nuestros Valores Fundamentales")
    cols = st.columns(4)
    valores = [
        ("üí°", "Innovaci√≥n", "Aprovechamos la tecnolog√≠a para crear soluciones avanzadas"),
        ("üéØ", "Personalizaci√≥n", "Dise√±amos planes √∫nicos para cada individuo"),
        ("üî¨", "Ciencia", "Basamos todo en evidencia cient√≠fica s√≥lida"),
        ("‚ù§Ô∏è", "Bienestar", "Buscamos tu desarrollo f√≠sico y mental integral")
    ]
    
    for i, (icono, titulo, desc) in enumerate(valores):
        with cols[i]:
            st.markdown(f"<h3 style='text-align:center;'>{icono} {titulo}</h3>", unsafe_allow_html=True)
            st.caption(desc)
    
    st.divider()

elif menu == "üë§ Sobre M√≠":
    st.title("Sobre M√≠")
    st.write("""
    Soy Erick Francisco De Luna Hern√°ndez, un profesional apasionado por el fitness y las ciencias del ejercicio, con una s√≥lida formaci√≥n acad√©mica y amplia experiencia en el dise√±o de metodolog√≠as de entrenamiento basadas en ciencia.
    """)
    
    st.subheader("Formaci√≥n Acad√©mica")
    st.write("""
    - Maestr√≠a en Fuerza y Acondicionamiento por el Football Science Institute
    - Licenciatura en Ciencias del Ejercicio por la UANL
    - Intercambio acad√©mico en la Universidad de Sevilla
    """)
    
    st.subheader("Experiencia Profesional")
    st.write("""
    Actualmente me desempe√±o en Muscle Up Gym, donde estoy encargado del dise√±o y desarrollo de programas de entrenamiento fundamentados en evidencia cient√≠fica.
    """)
    
    st.subheader("Logros y Reconocimientos")
    st.write("""
    - Premio al M√©rito Acad√©mico de la UANL
    - Primer Lugar de Generaci√≥n en la Facultad de Organizaci√≥n Deportiva
    - Beca completa para intercambio internacional
    """)

elif menu == "üíº Servicios":
    st.title("Nuestros Servicios")
    st.write("Ofrecemos soluciones personalizadas basadas en ciencia para optimizar tu rendimiento f√≠sico y bienestar integral.")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.subheader("üéØ Entrenamiento Personalizado")
        st.write("Planes individualizados basados en tu perfil f√≠sico, objetivos y disponibilidad.")
        st.button("M√°s informaci√≥n", key="btn_entrenamiento")
    
    with col2:
        st.subheader("üìä Evaluaci√≥n Integral")
        st.write("An√°lisis completo de tu condici√≥n f√≠sica, h√°bitos y potencial de mejora.")
        st.button("M√°s informaci√≥n", key="btn_evaluacion")
    
    with col3:
        st.subheader("üçé Nutrici√≥n Deportiva")
        st.write("Asesor√≠a nutricional personalizada para potenciar tu rendimiento y salud.")
        st.button("M√°s informaci√≥n", key="btn_nutricion")
    
    st.divider()
    
    st.subheader("Nuestro Enfoque")
    st.write("""
    Combinamos ciencia del ejercicio, tecnolog√≠a de vanguardia y metodolog√≠as probadas para ofrecer:
    - Programas 100% personalizados
    - Seguimiento constante
    - Ajustes basados en datos
    - Soporte profesional continuo
    """)

elif menu == "üìû Contacto":
    st.title("Contacto")
    st.write("Estamos aqu√≠ para ayudarte en tu camino hacia un mejor bienestar f√≠sico.")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("Informaci√≥n de Contacto")
        st.write("üìß contacto@mupai.com")
        st.write("üì± +52 866 258 05 94")
        st.write("üè¢ Monterrey, Nuevo Le√≥n, M√©xico")
        
        st.subheader("Horario de Atenci√≥n")
        st.write("Lunes a Viernes: 9:00 AM - 6:00 PM")
        st.write("S√°bados: 10:00 AM - 2:00 PM")
    
    with col2:
        st.subheader("Env√≠anos un Mensaje")
        nombre = st.text_input("Nombre completo")
        email = st.text_input("Correo electr√≥nico")
        mensaje = st.text_area("Mensaje", height=150)
        if st.button("Enviar mensaje", type="primary"):
            st.success("¬°Mensaje enviado con √©xito! Te contactaremos pronto.")

elif menu == "üìä Evaluaci√≥n del Estilo de Vida":
    st.title("Evaluaci√≥n de Estilo de Vida")
    st.write("Completa nuestras evaluaciones para recibir recomendaciones personalizadas.")
    
    # Submen√∫ para Evaluaci√≥n del Estilo de Vida
    submenu = st.selectbox(
        "Selecciona una evaluaci√≥n",
        [
            "üò∞ Estr√©s Percibido", 
            "üåô Calidad del Sue√±o", 
            "üèÉ Nivel de Actividad F√≠sica", 
            "üçé H√°bitos Alimenticios", 
            "üß¨ Potencial Gen√©tico Muscular"
        ]
    )
    
    if submenu == "üò∞ Estr√©s Percibido":
        st.header("Evaluaci√≥n del Estr√©s Percibido")
        st.write("Responde las siguientes preguntas seg√∫n c√≥mo te has sentido durante el √∫ltimo mes:")
        
        # (Contenido del cuestionario de estr√©s ir√≠a aqu√≠)

    elif submenu == "üåô Calidad del Sue√±o":
        cuestionario_calidad_sueno()
    
    elif submenu == "üèÉ Nivel de Actividad F√≠sica":
        st.header("Cuestionario de Actividad F√≠sica - IPAQ")
        st.write("Responde las siguientes preguntas sobre tu actividad f√≠sica durante los √∫ltimos 7 d√≠as.")
        # (Contenido del cuestionario IPAQ ir√≠a aqu√≠)
    
    elif submenu == "üçé H√°bitos Alimenticios":
        st.header("Evaluaci√≥n de H√°bitos Alimenticios")
        st.write("Responde las siguientes preguntas para evaluar tus h√°bitos alimenticios.")
        # (Contenido del cuestionario de h√°bitos alimenticios ir√≠a aqu√≠)
    
    elif submenu == "üß¨ Potencial Gen√©tico Muscular":
        st.header("Evaluaci√≥n de Potencial Gen√©tico Muscular")
        st.write("Completa este cuestionario para evaluar tu potencial gen√©tico para el desarrollo muscular.")
        # (Contenido del cuestionario gen√©tico ir√≠a aqu√≠)
