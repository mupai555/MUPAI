import streamlit as st

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="MUPAI - Entrenamiento Digital",
    page_icon="ü§ñ",
    layout="wide",
)

# Barra lateral de navegaci√≥n
menu = st.sidebar.selectbox(
    "Men√∫",
    ["Inicio", "Sobre M√≠", "Servicios", "Perfil MUPAI/Salud y Rendimiento", "Contacto"]
)

# Contenido seg√∫n la selecci√≥n del men√∫
if menu == "Inicio":
    st.image("LOGO.png", use_container_width=True)
    st.title("Bienvenido a MUPAI")
    
    st.header("Misi√≥n")
    st.write("""
    Hacer accesible el entrenamiento basado en ciencia, proporcionando planes completamente personalizados a trav√©s de herramientas digitales respaldadas por inteligencia artificial, datos precisos y la investigaci√≥n m√°s actualizada en ciencias del ejercicio. Nos enfocamos en promover el desarrollo integral de nuestros usuarios y su bienestar f√≠sico y mental.
    """)

    st.header("Visi√≥n")
    st.write("""
    Convertirnos en uno de los m√°ximos referentes a nivel global en entrenamiento digital personalizado, aprovechando las nuevas tecnolog√≠as para hacer m√°s accesible el fitness basado en ciencia. Aspiramos a transformar la experiencia del entrenamiento f√≠sico, integrando inteligencia artificial, investigaci√≥n cient√≠fica y herramientas digitales avanzadas que permitan a cualquier persona alcanzar su m√°ximo potencial.
    """)

    st.header("Pol√≠tica")
    st.write("""
    En **MUPAI**, nuestra pol√≠tica est√° fundamentada en el compromiso con la excelencia, la √©tica y el servicio centrado en el usuario. Actuamos con responsabilidad y transparencia para ofrecer soluciones tecnol√≥gicas que integren ciencia, personalizaci√≥n y accesibilidad, contribuyendo al bienestar integral de quienes conf√≠an en nosotros.
    """)

    st.header("Pol√≠tica del Servicio")
    st.write("""
    En **MUPAI**, guiamos nuestras acciones por los siguientes principios:
    - Dise√±amos entrenamientos digitales que combinan personalizaci√≥n, datos confiables y ciencia del ejercicio.
    - Aprovechamos la tecnolog√≠a para ofrecer un servicio accesible y adaptable a las necesidades de cada usuario.
    - Respetamos y protegemos la privacidad de los datos personales, garantizando su uso responsable.
    - Innovamos de forma continua para mejorar la experiencia y los resultados de nuestros usuarios.
    - Promovemos valores como el esfuerzo, la constancia y el respeto en cada interacci√≥n, fomentando un ambiente de crecimiento y bienestar.
    """)

elif menu == "Sobre M√≠":
    st.title("Sobre M√≠")
    st.write("""
    Soy Erick Francisco De Luna Hern√°ndez, un profesional apasionado por el fitness y las ciencias del ejercicio, con una s√≥lida formaci√≥n acad√©mica y amplia experiencia en el dise√±o de metodolog√≠as de entrenamiento basadas en ciencia. Actualmente, me desempe√±o en **Muscle Up Gym**, donde estoy encargado del dise√±o y desarrollo de programas de entrenamiento fundamentados en evidencia cient√≠fica. Mi labor se centra en crear metodolog√≠as personalizadas que optimicen el rendimiento f√≠sico y promuevan el bienestar integral de nuestros usuarios.

    Cuento con una Maestr√≠a en Fuerza y Acondicionamiento por el **Football Science Institute**, una Licenciatura en Ciencias del Ejercicio por la **Universidad Aut√≥noma de Nuevo Le√≥n (UANL)** y un intercambio acad√©mico internacional en la **Universidad de Sevilla**. Durante mi carrera, fui miembro del **Programa de Talento Universitario de la UANL**, una distinci√≥n que reconoce a estudiantes de excelencia acad√©mica y extracurricular. Adem√°s, adquir√≠ experiencia clave en el **Laboratorio de Rendimiento Humano de la UANL**, colaborando en evaluaciones avanzadas de fuerza, biomec√°nica y acondicionamiento f√≠sico con tecnolog√≠as innovadoras.

    Mi trayectoria ha sido reconocida con distinciones como el **Premio al M√©rito Acad√©mico de la UANL**, el **Primer Lugar de Generaci√≥n** en la Facultad de Organizaci√≥n Deportiva y una **beca completa para un intercambio internacional** en la Universidad de Sevilla. Estos logros reflejan mi compromiso con la excelencia acad√©mica y profesional.

    Con una combinaci√≥n de preparaci√≥n acad√©mica, experiencia pr√°ctica y un enfoque basado en la evidencia, me dedico a dise√±ar soluciones que transformen el rendimiento f√≠sico y promuevan la salud integral, integrando ciencia, innovaci√≥n y personalizaci√≥n.
    """)

    st.subheader("Galer√≠a de Im√°genes")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.image("FB_IMG_1734820693317.jpg", use_container_width=True)
        st.image("FB_IMG_1734820729323.jpg", use_container_width=True)
    with col2:
        st.image("FB_IMG_1734820709707.jpg", use_container_width=True)
        st.image("FB_IMG_1734820808186.jpg", use_container_width=True)
    with col3:
        st.image("FB_IMG_1734820712642.jpg", use_container_width=True)

elif menu == "Servicios":
    st.title("Servicios")
    st.write("""
    **MUPAI** ofrece una amplia gama de servicios personalizados basados en ciencia del ejercicio:
    - Planes de entrenamiento individualizados.
    - Programas de mejora f√≠sica y mental.
    - Asesor√≠a en nutrici√≥n deportiva.
    - Consultor√≠a en rendimiento deportivo.
    """)

elif menu == "Perfil MUPAI/Salud y Rendimiento":
    submenu = st.sidebar.radio(
        "Selecciona una opci√≥n", 
        ["Entrenamiento", "Nutrici√≥n"],
        key="submenu_selector"
    )
    
    if submenu == "Entrenamiento":
        st.title("üìã Cuestionario de Evaluaci√≥n MUPAI")
        
        with st.form("cuestionario_mupai"):
            # Secci√≥n 1: Informaci√≥n Personal
            st.header("1. Informaci√≥n Personal")
            nombre = st.text_input("Nombre completo legal:")
            edad = st.number_input("Edad (a√±os):", min_value=0, max_value=120, step=1)
            genero = st.radio("G√©nero biol√≥gico:", ["Hombre", "Mujer"])
            
            # Secci√≥n 2: C√°lculo FFMI
            st.header("2. C√°lculo del √çndice de Masa Libre de Grasa (FFMI)")
            peso = st.number_input("Peso actual (kg):", min_value=30.0, max_value=300.0, step=0.1)
            altura = st.number_input("Altura (cm):", min_value=100, max_value=250, step=1)
            grasa = st.number_input("Porcentaje de grasa corporal:", min_value=5.0, max_value=50.0, step=0.1)
            
            # Secci√≥n 3: Frecuencia de Entrenamiento
            st.header("3. Frecuencia Semanal de Entrenamiento")
            frecuencia = st.radio("¬øCu√°ntas veces por semana puedes entrenar?", 
                                ["2 veces por semana", "3 veces por semana", 
                                 "4 veces por semana", "5 veces por semana", 
                                 "6 veces por semana"])
            
            # Secci√≥n 4: Factores de Recuperaci√≥n
            st.header("4. Factores de Recuperaci√≥n")
            
            # 4.1 Calidad del Sue√±o
            st.subheader("Calidad del Sue√±o")
            col1, col2 = st.columns(2)
            with col1:
                dormir = st.time_input("Hora de acostarse (formato 24h):")
            with col2:
                despertar = st.time_input("Hora de despertarse (formato 24h):")
                
            tiempo_dormir = st.selectbox("Tiempo en quedarse dormido:", 
                                       ["Menos de 15 minutos (0 puntos)",
                                        "Entre 16 y 30 minutos (1 punto)",
                                        "Entre 31 y 60 minutos (2 puntos)",
                                        "M√°s de 60 minutos (3 puntos)"])
            
            horas_sue√±o = st.selectbox("Horas de sue√±o reales:", 
                                     ["M√°s de 7 horas (0 puntos)",
                                      "Entre 6 y 7 horas (1 punto)",
                                      "Entre 5 y 6 horas (2 puntos)",
                                      "Menos de 5 horas (3 puntos)"])
            
            problemas_sue√±o = st.selectbox("Frecuencia de problemas de sue√±o:", 
                                         ["Nunca (0 puntos)",
                                          "Menos de una vez por semana (1 punto)",
                                          "Entre 1 y 2 veces por semana (2 puntos)",
                                          "Tres o m√°s veces por semana (3 puntos)"])
            
            calidad_sue√±o = st.selectbox("Calidad general del sue√±o:", 
                                       ["Muy buena (0 puntos)",
                                        "Buena (1 punto)",
                                        "Regular (2 puntos)",
                                        "Mala (3 puntos)"])
            
            # 4.2 Estr√©s Percibido
            st.subheader("Escala de Estr√©s Percibido")
            preguntas_estres = [
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que no pod√≠as controlar lo que suced√≠a en tu vida?",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que ten√≠as demasiadas responsabilidades?",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia te has sentido abrumado por el estr√©s?",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que no pod√≠as manejar todo lo que ten√≠as que hacer?",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que no ten√≠as control sobre el estr√©s?",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que todo iba bien? (pregunta invertida)",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que pod√≠as manejar tus problemas? (pregunta invertida)",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que ten√≠as todo bajo control? (pregunta invertida)",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que las dificultades eran demasiado grandes?",
                "En el √∫ltimo mes, ¬øcon qu√© frecuencia has sentido que estabas en control de tu tiempo? (pregunta invertida)"
            ]
            
            opciones_estres = ["Nunca", "Casi nunca", "Algunas veces", "A menudo", "Muy a menudo"]
            puntuaciones_estres = []
            
            for i, pregunta in enumerate(preguntas_estres):
                respuesta = st.selectbox(f"{i+1}. {pregunta}", opciones_estres)
                puntuacion = opciones_estres.index(respuesta)
                
                # Invertir puntuaci√≥n para preguntas invertidas (6-8 y 10)
                if i in [5, 6, 7, 9]:  # √çndices base 0
                    puntuacion = 4 - puntuacion
                puntuaciones_estres.append(puntuacion)
            
            # Secci√≥n 5: Objetivos de Entrenamiento
            st.header("5. Objetivos de Entrenamiento")
            tipo_programa = st.radio("Tipo de Programa:", 
                                   ["Hipertrofia General", "Competici√≥n en Fisicoculturismo"])
            
            grupos_musculares = [
                "Flexores de codo", "Triceps", "Dorsal ancho", "Trapecio",
                "Pectoral", "Deltoides", "Cu√°driceps", "Isquitibiales",
                "Gl√∫teos", "Pantorrillas"
            ]
            
            if tipo_programa == "Hipertrofia General":
                priorizar = st.multiselect("Priorizar grupos musculares:", grupos_musculares)
                no_enfatizar = st.multiselect("Grupos musculares a no enfatizar:", grupos_musculares)
            
            # Bot√≥n de env√≠o
            submitted = st.form_submit_button("Calcular Perfil")
            
            if submitted:
                # C√°lculos FFMI
                mlg = peso * (1 - (grasa/100))
                ffmi = mlg / ((altura/100) ** 2)
                
                # Determinar nivel de entrenamiento
                if genero == "Hombre":
                    if ffmi <= 18: nivel = "Principiante"
                    elif 18.1 <= ffmi <= 20: nivel = "Intermedio"
                    elif 20.1 <= ffmi <= 22: nivel = "Avanzado"
                    elif 22.1 <= ffmi <= 25: nivel = "√âlite"
                    else: nivel = "Nivel F√≠sico-Culturismo"
                else:
                    if ffmi <= 16: nivel = "Principiante"
                    elif 16.1 <= ffmi <= 18: nivel = "Intermedio"
                    elif 18.1 <= ffmi <= 20: nivel = "Avanzado"
                    elif 20.1 <= ffmi <= 23: nivel = "√âlite"
                    else: nivel = "Nivel F√≠sico-Culturismo"
                
                # Calcular puntuaci√≥n sue√±o
                puntos_sue√±o = sum([
                    int(tiempo_dormir.split("(")[1][0]),
                    int(horas_sue√±o.split("(")[1][0]),
                    int(problemas_sue√±o.split("(")[1][0]),
                    int(calidad_sue√±o.split("(")[1][0])
                ])
                
                # Calcular estr√©s
                total_estres = sum(puntuaciones_estres)
                
                # Mostrar resultados
                st.success("**Resultados del An√°lisis**")
                col1, col2, col3 = st.columns(3)
                with col1:
                    st.metric("FFMI", f"{ffmi:.2f}")
                    st.metric("Nivel de Entrenamiento", nivel)
                    st.metric("Masa Libre de Grasa", f"{mlg:.2f} kg")
                with col2:
                    st.metric("Calidad de Sue√±o", f"{puntos_sue√±o}/12")
                    st.metric("Nivel de Estr√©s", f"{total_estres}/40")
                with col3:
                    st.metric("Frecuencia Recomendada", frecuencia)
                    st.metric("Tipo de Programa", tipo_programa)
                
                # C√°lculos metab√≥licos
                tmb = 370 + (21.6 * mlg)
                st.subheader("Metabolismo")
                st.write(f"**Tasa Metab√≥lica Basal (TMB):** {tmb:.2f} kcal")
                
                # Recomendaciones finales
                with st.expander("üìå Recomendaciones Personalizadas", expanded=True):
                    st.write(f"""
                    ### Plan de Acci√≥n:
                    - **Programa de entrenamiento:** {tipo_programa}
                    - **Frecuencia semanal:** {frecuencia}
                    - **Enfoque de recuperaci√≥n:** {"Prioritario üî¥" if puntos_sue√±o > 5 or total_estres > 20 else "Moderado üü¢"}
                    - **Suplementaci√≥n recomendada:** {"B√°sica (Prote√≠na, Creatina)" if nivel in ["Principiante", "Intermedio"] else "Avanzada (BCAAs, Pre-entreno)"}
                    """)
                    
                    if tipo_programa == "Competici√≥n en Fisicoculturismo":
                        if "Avanzado" in nivel or "√âlite" in nivel:
                            st.write("\n### Categor√≠as disponibles:")
                            if genero == "Hombre":
                                st.write("- Classic Physique\n- Men‚Äôs Physique\n- BODYBUILDING")
                            else:
                                st.write("- Wellness\n- Bikini\n- Bodybuilding")
                        else:
                            st.warning("Se requiere nivel Avanzado o superior para categor√≠as de competici√≥n")

    elif submenu == "Nutrici√≥n":
        st.title("Nutrici√≥n")
        st.write("""
        En esta secci√≥n exploraremos c√≥mo optimizar la nutrici√≥n para mejorar el rendimiento deportivo, la salud y el bienestar.
        """)

elif menu == "Contacto":
    st.title("Contacto")
    st.write("""
    Para m√°s informaci√≥n o consultas, cont√°ctanos:
    - **Correo**: contacto@mupai.com
    - **Tel√©fono**: +52 123 456 7890
    - **Ubicaci√≥n**: Monterrey, Nuevo Le√≥n
    """)
