import streamlit as st
import sqlite3

# Configuraci√≥n inicial de la p√°gina
st.set_page_config(
    page_title="MUPAI - Entrenamiento Digital",
    page_icon="ü§ñ",
    layout="wide",
)

# Configuraci√≥n de la base de datos
def init_db():
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY,
            username TEXT UNIQUE,
            password TEXT,
            authorized INTEGER DEFAULT 0
        )
    ''')
    conn.commit()
    conn.close()

# Guardar un usuario nuevo en la base de datos
def register_user(username, password):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    try:
        cursor.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, password))
        conn.commit()
        conn.close()
        return True
    except sqlite3.IntegrityError:
        conn.close()
        return False

# Verificar login
def login_user(username, password):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    user = cursor.execute("SELECT * FROM users WHERE username=? AND password=?", (username, password)).fetchone()
    conn.close()
    return user

# Autorizar usuario manualmente
def authorize_user(user_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET authorized=1 WHERE id=?", (user_id,))
    conn.commit()
    conn.close()

# Secci√≥n Inicio
def inicio():
    st.image("LOGO.png", use_container_width=True)
    st.title("Bienvenido a MUPAI")

    st.header("Misi√≥n")
    st.write("""
    Hacer accesible el entrenamiento basado en ciencia, proporcionando planes completamente personalizados a trav√©s de herramientas digitales respaldadas por inteligencia artificial, datos precisos y la investigaci√≥n m√°s actualizada en ciencias del ejercicio. Nos enfocamos en promover el desarrollo integral de nuestros usuarios y su bienestar f√≠sico y mental.
    """)

    st.header("Visi√≥n")
    st.write("""
    Convertirnos en uno de los m√°ximos referentes a nivel global en entrenamiento digital personalizado, aprovechando las nuevas tecnolog√≠as para hacer m√°s accesible el fitness basado en ciencia. Aspiramos a transformar la experiencia del entrenamiento f√≠sico, integrando inteligencia artificial, investigaci√≥n cient√≠fica y herramientas digitales avanzadas que permitan a cualquier persona alcanzar su m√°ximo potencial.
    """)

    st.header("Pol√≠tica")
    st.write("""
    En **MUPAI**, nuestra pol√≠tica est√° fundamentada en el compromiso con la excelencia, la √©tica y el servicio centrado en el usuario. Actuamos con responsabilidad y transparencia para ofrecer soluciones tecnol√≥gicas que integren ciencia, personalizaci√≥n y accesibilidad, contribuyendo al bienestar integral de quienes conf√≠an en nosotros.
    """)

    st.header("Pol√≠tica del Servicio")
    st.write("""
    En **MUPAI**, guiamos nuestras acciones por los siguientes principios:
    - Dise√±amos entrenamientos digitales que combinan personalizaci√≥n, datos confiables y ciencia del ejercicio.
    - Aprovechamos la tecnolog√≠a para ofrecer un servicio accesible y adaptable a las necesidades de cada usuario.
    - Respetamos y protegemos la privacidad de los datos personales, garantizando su uso responsable.
    - Innovamos de forma continua para mejorar la experiencia y los resultados de nuestros usuarios.
    - Promovemos valores como el esfuerzo, la constancia y el respeto en cada interacci√≥n, fomentando un ambiente de crecimiento y bienestar.
    """)

# Secci√≥n Sobre M√≠
def sobre_mi():
    st.title("Sobre M√≠")
    st.write("""Soy Erick Francisco De Luna Hern√°ndez, un profesional apasionado por el fitness y las ciencias del ejercicio, con una s√≥lida formaci√≥n acad√©mica y amplia experiencia en el dise√±o de metodolog√≠as de entrenamiento basadas en ciencia. Actualmente, me desempe√±o en **Muscle Up Gym**, donde estoy encargado del dise√±o y desarrollo de programas de entrenamiento fundamentados en evidencia cient√≠fica. Mi labor se centra en crear metodolog√≠as personalizadas que optimicen el rendimiento f√≠sico y promuevan el bienestar integral de nuestros usuarios.

    Cuento con una Maestr√≠a en Fuerza y Acondicionamiento por el **Football Science Institute**, una Licenciatura en Ciencias del Ejercicio por la **Universidad Aut√≥noma de Nuevo Le√≥n (UANL)** y un intercambio acad√©mico internacional en la **Universidad de Sevilla**. Durante mi carrera, fui miembro del **Programa de Talento Universitario de la UANL**, una distinci√≥n que reconoce a estudiantes de excelencia acad√©mica y extracurricular. Adem√°s, adquir√≠ experiencia clave en el **Laboratorio de Rendimiento Humano de la UANL**, colaborando en evaluaciones avanzadas de fuerza, biomec√°nica y acondicionamiento f√≠sico con tecnolog√≠as innovadoras.

    Mi trayectoria ha sido reconocida con distinciones como el **Premio al M√©rito Acad√©mico de la UANL**, el **Primer Lugar de Generaci√≥n** en la Facultad de Organizaci√≥n Deportiva y una **beca completa para un intercambio internacional** en la Universidad de Sevilla. Estos logros reflejan mi compromiso con la excelencia acad√©mica y profesional.

    Con una combinaci√≥n de preparaci√≥n acad√©mica, experiencia pr√°ctica y un enfoque basado en la evidencia, me dedico a dise√±ar soluciones que transformen el rendimiento f√≠sico y promuevan la salud integral, integrando ciencia, innovaci√≥n y personalizaci√≥n.
    """)
    """)
    st.subheader("Galer√≠a de Im√°genes")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.image("20250116_074806_0000.jpg", use_container_width=True)
        st.image("FB_IMG_1734820729323.jpg", use_container_width=True)
    with col2:
        st.image("FB_IMG_1734820709707.jpg", use_container_width=True)
        st.image("FB_IMG_1734820808186.jpg", use_container_width=True)
    with col3:
        st.image("FB_IMG_1734820712642.jpg", use_container_width=True)

# Secci√≥n Servicios
def servicios():
    st.title("Servicios")
    st.write("""
    **MUPAI** ofrece una amplia gama de servicios personalizados basados en ciencia del ejercicio:
    - Planes de entrenamiento individualizados.
    - Programas de mejora f√≠sica y mental.
    - Asesor√≠a en nutrici√≥n deportiva.
    - Consultor√≠a en rendimiento deportivo.
    """)

# Secci√≥n Contacto
def contacto():
    st.title("Contacto")
    st.write("""
    Para m√°s informaci√≥n o consultas, cont√°ctanos:
    - **Correo**: contacto@mupai.com  
    - **Tel√©fono**: "+52 866 258 05 94"  
    - **Ubicaci√≥n**: Monterrey, Nuevo Le√≥n  
    """)

# Panel de administraci√≥n
def administrar_usuarios():
    st.subheader("Administrar Usuarios Pendientes")
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    pending_users = cursor.execute("SELECT id, username FROM users WHERE authorized=0").fetchall()
    conn.close()

    if pending_users:
        st.write("Usuarios pendientes de autorizaci√≥n:")
        for user in pending_users:
            if st.button(f"Autorizar a {user[1]}", key=user[0]):
                authorize_user(user[0])
                st.success(f"Usuario {user[1]} autorizado.")
    else:
        st.write("No hay usuarios pendientes de autorizaci√≥n.")

# Main function
def main():
    init_db()

    st.sidebar.title("Navegaci√≥n")
    menu = st.sidebar.radio(
        "Ir a:",
        ["Inicio", "Sobre M√≠", "Servicios", "Contacto", "Administrar Usuarios"]
    )

    user = None
    st.sidebar.title("Registro / Login")
    choice = st.sidebar.selectbox("¬øQu√© quieres hacer?", ["Registro", "Login"])
    if choice == "Registro":
        username = st.sidebar.text_input("Usuario")
        password = st.sidebar.text_input("Contrase√±a", type="password")
        if st.sidebar.button("Registrar"):
            if register_user(username, password):
                st.sidebar.success("Usuario registrado con √©xito. Espera autorizaci√≥n.")
            else:
                st.sidebar.error("El usuario ya existe.")
    elif choice == "Login":
        username = st.sidebar.text_input("Usuario")
        password = st.sidebar.text_input("Contrase√±a", type="password")
        if st.sidebar.button("Login"):
            user = login_user(username, password)
            if user and user[3] == 1:
                st.sidebar.success(f"Bienvenido, {user[1]}.")
            elif user:
                st.sidebar.warning("No autorizado.")
            else:
                st.sidebar.error("Usuario o contrase√±a incorrectos.")

    if menu == "Inicio":
        inicio()
    elif menu == "Sobre M√≠":
        sobre_mi()
    elif menu == "Servicios":
        servicios()
    elif menu == "Contacto":
        contacto()
    elif menu == "Administrar Usuarios":
        administrar_usuarios()

if __name__ == "__main__":
    main()
